{"ast":null,"code":"var _jsxFileName = \"/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/context/ThemeSettingsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext } from 'react';\nimport { themeSettings } from './themes/themeSettings'; // Adjust the path if necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  const theme = 'default'; // Replace with dynamic theme selection logic if necessary\n  const value = {\n    theme,\n    themeSettings: themeSettings[theme]\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n\n// Optional: create a `useThemeSettings` hook if needed\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useThemeSettings = () => {\n  _s2();\n  const {\n    themeSettings\n  } = useTheme();\n  return themeSettings;\n};\n_s2(useThemeSettings, \"6jyRUpa5oHGIl+SQo8NlqjDHzGU=\", false, function () {\n  return [useTheme];\n});\nexport { themeSettings }; // Ensure this is exported for direct access\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useContext","themeSettings","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","theme","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s","useThemeSettings","_s2","$RefreshReg$"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/context/ThemeSettingsContext.js"],"sourcesContent":["import { createContext, useContext } from 'react';\nimport { themeSettings } from './themes/themeSettings'; // Adjust the path if necessary\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const theme = 'default'; // Replace with dynamic theme selection logic if necessary\n  const value = { theme, themeSettings: themeSettings[theme] };\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return useContext(ThemeContext);\n};\n\n// Optional: create a `useThemeSettings` hook if needed\nexport const useThemeSettings = () => {\n  const { themeSettings } = useTheme();\n  return themeSettings;\n};\n\nexport { themeSettings }; // Ensure this is exported for direct access\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,SAASC,aAAa,QAAQ,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC7C,MAAMC,KAAK,GAAG,SAAS,CAAC,CAAC;EACzB,MAAMC,KAAK,GAAG;IAAED,KAAK;IAAEN,aAAa,EAAEA,aAAa,CAACM,KAAK;EAAE,CAAC;EAC5D,oBACEJ,OAAA,CAACC,YAAY,CAACK,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAF,QAAA,EACjCA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACC,EAAA,GARWT,aAAa;AAU1B,OAAO,MAAMU,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,OAAOhB,UAAU,CAACI,YAAY,CAAC;AACjC,CAAC;;AAED;AAAAY,EAAA,CAJaD,QAAQ;AAKrB,OAAO,MAAME,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpC,MAAM;IAAEjB;EAAc,CAAC,GAAGc,QAAQ,CAAC,CAAC;EACpC,OAAOd,aAAa;AACtB,CAAC;AAACiB,GAAA,CAHWD,gBAAgB;EAAA,QACDF,QAAQ;AAAA;AAIpC,SAASd,aAAa,GAAG,CAAC;AAAA,IAAAa,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}