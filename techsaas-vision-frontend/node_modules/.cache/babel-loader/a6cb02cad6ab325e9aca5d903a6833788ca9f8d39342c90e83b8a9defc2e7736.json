{"ast":null,"code":"var _jsxFileName = \"/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/context/ThemeSettingsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { themeSettings } from './themes/themeSettings'; // Adjust the path if necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // State to manage the current theme\n  const [theme, setTheme] = useState('default');\n\n  // Function to set theme from local storage or fallback to default\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('selectedTheme');\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n\n  // Function to update the theme and save it to local storage\n  const handleSetTheme = newTheme => {\n    setTheme(newTheme);\n    localStorage.setItem('selectedTheme', newTheme);\n  };\n  const value = {\n    theme,\n    themeSettings: themeSettings[theme],\n    setTheme: handleSetTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"harZOOCftm4CiS0E9M3gY4Hh3mM=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n\n// Optional: create a `useThemeSettings` hook for easy access to theme settings\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useThemeSettings = () => {\n  _s3();\n  const {\n    themeSettings\n  } = useTheme();\n  return themeSettings;\n};\n_s3(useThemeSettings, \"6jyRUpa5oHGIl+SQo8NlqjDHzGU=\", false, function () {\n  return [useTheme];\n});\nexport { themeSettings }; // Ensure this is exported for direct access\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","themeSettings","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","savedTheme","localStorage","getItem","handleSetTheme","newTheme","setItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","useThemeSettings","_s3","$RefreshReg$"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/context/ThemeSettingsContext.js"],"sourcesContent":["import {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\nimport { themeSettings } from './themes/themeSettings'; // Adjust the path if necessary\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  // State to manage the current theme\n  const [theme, setTheme] = useState('default');\n\n  // Function to set theme from local storage or fallback to default\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('selectedTheme');\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n\n  // Function to update the theme and save it to local storage\n  const handleSetTheme = (newTheme) => {\n    setTheme(newTheme);\n    localStorage.setItem('selectedTheme', newTheme);\n  };\n\n  const value = {\n    theme,\n    themeSettings: themeSettings[theme],\n    setTheme: handleSetTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return useContext(ThemeContext);\n};\n\n// Optional: create a `useThemeSettings` hook for easy access to theme settings\nexport const useThemeSettings = () => {\n  const { themeSettings } = useTheme();\n  return themeSettings;\n};\n\nexport { themeSettings }; // Ensure this is exported for direct access\n"],"mappings":";;;;AAAA,SACEA,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,SAAS,QACJ,OAAO;AACd,SAASC,aAAa,QAAQ,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMQ,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,SAAS,CAAC;;EAE7C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IACxD,IAAIF,UAAU,EAAE;MACdD,QAAQ,CAACC,UAAU,CAAC;IACtB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,cAAc,GAAIC,QAAQ,IAAK;IACnCL,QAAQ,CAACK,QAAQ,CAAC;IAClBH,YAAY,CAACI,OAAO,CAAC,eAAe,EAAED,QAAQ,CAAC;EACjD,CAAC;EAED,MAAME,KAAK,GAAG;IACZR,KAAK;IACLP,aAAa,EAAEA,aAAa,CAACO,KAAK,CAAC;IACnCC,QAAQ,EAAEI;EACZ,CAAC;EAED,oBACEV,OAAA,CAACC,YAAY,CAACa,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAV,QAAA,EACjCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACd,EAAA,CA7BWF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AA+B1B,OAAO,MAAMkB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,OAAO1B,UAAU,CAACM,YAAY,CAAC;AACjC,CAAC;;AAED;AAAAoB,GAAA,CAJaD,QAAQ;AAKrB,OAAO,MAAME,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpC,MAAM;IAAEzB;EAAc,CAAC,GAAGsB,QAAQ,CAAC,CAAC;EACpC,OAAOtB,aAAa;AACtB,CAAC;AAACyB,GAAA,CAHWD,gBAAgB;EAAA,QACDF,QAAQ;AAAA;AAIpC,SAAStB,aAAa,GAAG,CAAC;AAAA,IAAAqB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}