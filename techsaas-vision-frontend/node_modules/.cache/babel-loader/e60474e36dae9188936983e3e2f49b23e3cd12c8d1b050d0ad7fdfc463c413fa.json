{"ast":null,"code":"import React,{useState}from'react';import{useThemeSettings}from'../../context/theme/ThemeSettingsContext/ThemeSettingsContext';import CustomCard from'../cards/CustomCard/CustomCard';import'./APIWidgets.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const APIWidgets=()=>{const[weather,setWeather]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const themeSettings=useThemeSettings();const apiKey='2eaf366e4ec243d68c034719242308';const fetchWeather=function(){let location=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'dallas';setLoading(true);setError(null);fetch(`https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}&days=7&aqi=no&alerts=no`).then(response=>{if(!response.ok){throw new Error('Failed to fetch weather data');}return response.json();}).then(data=>{setWeather(data);setLoading(false);}).catch(err=>{setError('Failed to fetch weather data');setLoading(false);});};const determineBackgroundClass=(isDay,condition)=>{if(isDay){if(condition.includes('Sunny'))return'sunny-day-background';if(condition.includes('Cloudy'))return'cloudy-day-background';if(condition.includes('Rain'))return'rainy-day-background';return'default-day-background';}else{if(condition.includes('Clear'))return'clear-night-background';if(condition.includes('Cloudy'))return'cloudy-night-background';if(condition.includes('Rain'))return'rainy-night-background';return'default-night-background';}};return/*#__PURE__*/_jsxs(\"div\",{className:`api-widgets ${weather?determineBackgroundClass(weather.current.is_day,weather.current.condition.text):''}`,style:{backgroundColor:themeSettings.colors.background,color:themeSettings.colors.text,fontFamily:themeSettings.typography.fontFamily},children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:themeSettings.colors.accent,borderBottom:`2px solid ${themeSettings.colors.accent}`},children:\"Weather in Fort Worth\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"location-selector\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter ZIP code\",className:\"zip-input\",onKeyPress:e=>{if(e.key==='Enter'){fetchWeather(e.target.value);}}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>fetchWeather('new york'),className:\"fetch-button\",style:{backgroundColor:themeSettings.colors.accent,color:themeSettings.colors.textOnAccent},children:\"Get Weather\"})]}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}):error?/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}):weather?/*#__PURE__*/_jsxs(\"div\",{className:\"weather-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"current-weather\",children:/*#__PURE__*/_jsx(CustomCard,{title:\"Current Conditions\",description:`${weather.current.temp_f}°F, ${weather.current.condition.text}`,imageSrc:'',details:[`Wind: ${weather.current.wind_mph} mph`,`Humidity: ${weather.current.humidity}%`]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"forecast\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"7-Day Forecast\"}),/*#__PURE__*/_jsx(\"div\",{className:\"forecast-container\",children:weather.forecast.forecastday.map((day,index)=>/*#__PURE__*/_jsx(CustomCard,{title:day.date,description:`${day.day.maxtemp_f}°F / ${day.day.mintemp_f}°F`,imageSrc:day.day.condition.icon,details:[day.day.condition.text],className:\"forecast-card\"},index))})]})]}):null]});};export default APIWidgets;","map":{"version":3,"names":["React","useState","useThemeSettings","CustomCard","jsx","_jsx","jsxs","_jsxs","APIWidgets","weather","setWeather","loading","setLoading","error","setError","themeSettings","apiKey","fetchWeather","location","arguments","length","undefined","fetch","then","response","ok","Error","json","data","catch","err","determineBackgroundClass","isDay","condition","includes","className","current","is_day","text","style","backgroundColor","colors","background","color","fontFamily","typography","children","accent","borderBottom","type","placeholder","onKeyPress","e","key","target","value","onClick","textOnAccent","title","description","temp_f","imageSrc","details","wind_mph","humidity","forecast","forecastday","map","day","index","date","maxtemp_f","mintemp_f","icon"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/components/APIWidgets/APIWidgets.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useThemeSettings } from '../../context/theme/ThemeSettingsContext/ThemeSettingsContext';\nimport CustomCard from '../cards/CustomCard/CustomCard';\nimport './APIWidgets.css';\n\nconst APIWidgets = () => {\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const themeSettings = useThemeSettings();\n  const apiKey = '2eaf366e4ec243d68c034719242308';\n\n  const fetchWeather = (location = 'dallas') => {\n    setLoading(true);\n    setError(null);\n\n    fetch(\n      `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}&days=7&aqi=no&alerts=no`\n    )\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch weather data');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setWeather(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError('Failed to fetch weather data');\n        setLoading(false);\n      });\n  };\n\n  const determineBackgroundClass = (isDay, condition) => {\n    if (isDay) {\n      if (condition.includes('Sunny')) return 'sunny-day-background';\n      if (condition.includes('Cloudy'))\n        return 'cloudy-day-background';\n      if (condition.includes('Rain')) return 'rainy-day-background';\n      return 'default-day-background';\n    } else {\n      if (condition.includes('Clear'))\n        return 'clear-night-background';\n      if (condition.includes('Cloudy'))\n        return 'cloudy-night-background';\n      if (condition.includes('Rain')) return 'rainy-night-background';\n      return 'default-night-background';\n    }\n  };\n\n  return (\n    <div\n      className={`api-widgets ${\n        weather\n          ? determineBackgroundClass(\n              weather.current.is_day,\n              weather.current.condition.text\n            )\n          : ''\n      }`}\n      style={{\n        backgroundColor: themeSettings.colors.background,\n        color: themeSettings.colors.text,\n        fontFamily: themeSettings.typography.fontFamily,\n      }}\n    >\n      <h2\n        style={{\n          color: themeSettings.colors.accent,\n          borderBottom: `2px solid ${themeSettings.colors.accent}`,\n        }}\n      >\n        Weather in Fort Worth\n      </h2>\n      <div className=\"location-selector\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter ZIP code\"\n          className=\"zip-input\"\n          onKeyPress={(e) => {\n            if (e.key === 'Enter') {\n              fetchWeather(e.target.value);\n            }\n          }}\n        />\n        <button\n          onClick={() => fetchWeather('new york')}\n          className=\"fetch-button\"\n          style={{\n            backgroundColor: themeSettings.colors.accent,\n            color: themeSettings.colors.textOnAccent,\n          }}\n        >\n          Get Weather\n        </button>\n      </div>\n\n      {loading ? (\n        <div className=\"loading-spinner\"></div>\n      ) : error ? (\n        <p className=\"error\">{error}</p>\n      ) : weather ? (\n        <div className=\"weather-info\">\n          <div className=\"current-weather\">\n            <CustomCard\n              title=\"Current Conditions\"\n              description={`${weather.current.temp_f}°F, ${weather.current.condition.text}`}\n              imageSrc={''}\n              details={[\n                `Wind: ${weather.current.wind_mph} mph`,\n                `Humidity: ${weather.current.humidity}%`,\n              ]}\n            />\n          </div>\n\n          <div className=\"forecast\">\n            <h3>7-Day Forecast</h3>\n            <div className=\"forecast-container\">\n              {weather.forecast.forecastday.map((day, index) => (\n                <CustomCard\n                  key={index}\n                  title={day.date}\n                  description={`${day.day.maxtemp_f}°F / ${day.day.mintemp_f}°F`}\n                  imageSrc={day.day.condition.icon}\n                  details={[day.day.condition.text]}\n                  className=\"forecast-card\"\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default APIWidgets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}