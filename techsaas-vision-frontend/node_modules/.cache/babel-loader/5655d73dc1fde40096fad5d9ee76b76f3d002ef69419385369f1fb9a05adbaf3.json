{"ast":null,"code":"var _jsxFileName = \"/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/widgets/CalculatorWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CalculatorWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalculatorWidget = () => {\n  _s();\n  const [expression, setExpression] = useState('');\n  const [result, setResult] = useState('');\n  const handleInput = value => {\n    setExpression(expression + value);\n  };\n  const handleCalculate = () => {\n    try {\n      setResult(eval(expression)); // Evaluate the expression (make sure to sanitize in real-world apps)\n    } catch (error) {\n      setResult('Error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Complex Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: expression,\n      onChange: e => setExpression(e.target.value),\n      placeholder: \"Enter calculation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCalculate,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-buttons\",\n      children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, '+', '-', '*', '/'].map(value => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleInput(value),\n        children: value\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(CalculatorWidget, \"hH7proWWm86kaCrOelT9Z946X7w=\");\n_c = CalculatorWidget;\nexport default CalculatorWidget;\nvar _c;\n$RefreshReg$(_c, \"CalculatorWidget\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CalculatorWidget","_s","expression","setExpression","result","setResult","handleInput","value","handleCalculate","eval","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/widgets/CalculatorWidget.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './CalculatorWidget.css';\n\nconst CalculatorWidget = () => {\n  const [expression, setExpression] = useState('');\n  const [result, setResult] = useState('');\n\n  const handleInput = (value) => {\n    setExpression(expression + value);\n  };\n\n  const handleCalculate = () => {\n    try {\n      setResult(eval(expression)); // Evaluate the expression (make sure to sanitize in real-world apps)\n    } catch (error) {\n      setResult('Error');\n    }\n  };\n\n  return (\n    <div className=\"calculator-widget\">\n      <h3>Complex Calculator</h3>\n      <input\n        type=\"text\"\n        value={expression}\n        onChange={(e) => setExpression(e.target.value)}\n        placeholder=\"Enter calculation\"\n      />\n      <button onClick={handleCalculate}>Calculate</button>\n      {result && <div className=\"result\">Result: {result}</div>}\n      <div className=\"calculator-buttons\">\n        {[1, 2, 3, 4, 5, 6, 7, 8, 9, 0, '+', '-', '*', '/'].map(\n          (value) => (\n            <button key={value} onClick={() => handleInput(value)}>\n              {value}\n            </button>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CalculatorWidget;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,WAAW,GAAIC,KAAK,IAAK;IAC7BJ,aAAa,CAACD,UAAU,GAAGK,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI;MACFH,SAAS,CAACI,IAAI,CAACP,UAAU,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdL,SAAS,CAAC,OAAO,CAAC;IACpB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKY,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCb,OAAA;MAAAa,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXV,KAAK,EAAEL,UAAW;MAClBgB,QAAQ,EAAGC,CAAC,IAAKhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACb,KAAK,CAAE;MAC/Cc,WAAW,EAAC;IAAmB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFjB,OAAA;MAAQuB,OAAO,EAAEd,eAAgB;MAAAI,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnDZ,MAAM,iBAAIL,OAAA;MAAKY,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,UAAQ,EAACR,MAAM;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzDjB,OAAA;MAAKY,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACW,GAAG,CACpDhB,KAAK,iBACJR,OAAA;QAAoBuB,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACC,KAAK,CAAE;QAAAK,QAAA,EACnDL;MAAK,GADKA,KAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CAEZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAtCID,gBAAgB;AAAAwB,EAAA,GAAhBxB,gBAAgB;AAwCtB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}