{"ast":null,"code":"var _jsxFileName = \"/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/components/APIWidgets/APIWidgets.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useThemeSettings } from '../../context/ThemeSettingsContext';\nimport './APIWidgets.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APIWidgets = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const themeSettings = useThemeSettings();\n  const apiKey = '2eaf366e4ec243d68c034719242308';\n  const fetchWeather = () => {\n    setLoading(true);\n    setError(null);\n    fetch(`https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=London`).then(response => response.json()).then(data => {\n      setWeather(data);\n      setLoading(false);\n    }).catch(error => {\n      setError('Failed to fetch weather data.');\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"api-widgets\",\n    style: {\n      backgroundColor: themeSettings.colors.background,\n      color: themeSettings.colors.text\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: themeSettings.colors.primary\n      },\n      children: \"API Widgets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widget\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weather in London\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchWeather,\n        className: \"fetch-button\",\n        style: {\n          backgroundColor: themeSettings.colors.accent\n        },\n        children: loading ? 'Loading...' : 'Get Weather'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", weather.current.temp_c, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Condition: \", weather.current.condition.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \"const fetchCryptoPrices = () =>\", ' ', \"; return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widget\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cryptocurrency Prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchCryptoPrices,\n        className: \"fetch-button\",\n        children: \"Get Prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(APIWidgets, \"dmwr2Qsl1kpTRJAJvuTZLMHDlwk=\", false, function () {\n  return [useThemeSettings];\n});\n_c = APIWidgets;\nexport default APIWidgets;\nvar _c;\n$RefreshReg$(_c, \"APIWidgets\");","map":{"version":3,"names":["React","useState","useThemeSettings","jsxDEV","_jsxDEV","APIWidgets","_s","weather","setWeather","loading","setLoading","error","setError","themeSettings","apiKey","fetchWeather","fetch","then","response","json","data","catch","className","style","backgroundColor","colors","background","color","text","children","primary","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accent","current","temp_c","condition","fetchCryptoPrices","_c","$RefreshReg$"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/components/APIWidgets/APIWidgets.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useThemeSettings } from '../../context/ThemeSettingsContext';\nimport './APIWidgets.css';\n\nconst APIWidgets = () => {\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const themeSettings = useThemeSettings();\n\n  const apiKey = '2eaf366e4ec243d68c034719242308';\n\n  const fetchWeather = () => {\n    setLoading(true);\n    setError(null);\n\n    fetch(\n      `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=London`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setWeather(data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setError('Failed to fetch weather data.');\n        setLoading(false);\n      });\n  };\n\n  return (\n    <section\n      className=\"api-widgets\"\n      style={{\n        backgroundColor: themeSettings.colors.background,\n        color: themeSettings.colors.text,\n      }}\n    >\n      <h2 style={{ color: themeSettings.colors.primary }}>\n        API Widgets\n      </h2>\n      <div className=\"widget\">\n        <h3>Weather in London</h3>\n        <button\n          onClick={fetchWeather}\n          className=\"fetch-button\"\n          style={{ backgroundColor: themeSettings.colors.accent }}\n        >\n          {loading ? 'Loading...' : 'Get Weather'}\n        </button>\n        {error && <p className=\"error-message\">{error}</p>}\n        {weather && (\n          <div className=\"weather-info\">\n            <p>Temperature: {weather.current.temp_c}Â°C</p>\n            <p>Condition: {weather.current.condition.text}</p>\n          </div>\n        )}\n      </div>\n      {/* Additional Widgets can be added here */}\n      const fetchCryptoPrices = () =>{' '}\n      {\n        // Add functionality to fetch cryptocurrency prices\n      }\n      ; return (\n      <div className=\"widget\">\n        <h3>Cryptocurrency Prices</h3>\n        <button onClick={fetchCryptoPrices} className=\"fetch-button\">\n          Get Prices\n        </button>\n        {/* Render cryptocurrency prices here */}\n      </div>\n      );\n    </section>\n  );\n};\n\nexport default APIWidgets;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMY,aAAa,GAAGX,gBAAgB,CAAC,CAAC;EAExC,MAAMY,MAAM,GAAG,gCAAgC;EAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBL,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEdI,KAAK,CACH,kDAAkDF,MAAM,WAC1D,CAAC,CACEG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdZ,UAAU,CAACY,IAAI,CAAC;MAChBV,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDW,KAAK,CAAEV,KAAK,IAAK;MAChBC,QAAQ,CAAC,+BAA+B,CAAC;MACzCF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAED,oBACEN,OAAA;IACEkB,SAAS,EAAC,aAAa;IACvBC,KAAK,EAAE;MACLC,eAAe,EAAEX,aAAa,CAACY,MAAM,CAACC,UAAU;MAChDC,KAAK,EAAEd,aAAa,CAACY,MAAM,CAACG;IAC9B,CAAE;IAAAC,QAAA,gBAEFzB,OAAA;MAAImB,KAAK,EAAE;QAAEI,KAAK,EAAEd,aAAa,CAACY,MAAM,CAACK;MAAQ,CAAE;MAAAD,QAAA,EAAC;IAEpD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL9B,OAAA;MAAKkB,SAAS,EAAC,QAAQ;MAAAO,QAAA,gBACrBzB,OAAA;QAAAyB,QAAA,EAAI;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B9B,OAAA;QACE+B,OAAO,EAAEpB,YAAa;QACtBO,SAAS,EAAC,cAAc;QACxBC,KAAK,EAAE;UAAEC,eAAe,EAAEX,aAAa,CAACY,MAAM,CAACW;QAAO,CAAE;QAAAP,QAAA,EAEvDpB,OAAO,GAAG,YAAY,GAAG;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,EACRvB,KAAK,iBAAIP,OAAA;QAAGkB,SAAS,EAAC,eAAe;QAAAO,QAAA,EAAElB;MAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjD3B,OAAO,iBACNH,OAAA;QAAKkB,SAAS,EAAC,cAAc;QAAAO,QAAA,gBAC3BzB,OAAA;UAAAyB,QAAA,GAAG,eAAa,EAACtB,OAAO,CAAC8B,OAAO,CAACC,MAAM,EAAC,OAAE;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9C9B,OAAA;UAAAyB,QAAA,GAAG,aAAW,EAACtB,OAAO,CAAC8B,OAAO,CAACE,SAAS,CAACX,IAAI;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACsC,iCACb,EAAC,GAAG,EAGlC,YAED,eAAA9B,OAAA;MAAKkB,SAAS,EAAC,QAAQ;MAAAO,QAAA,gBACrBzB,OAAA;QAAAyB,QAAA,EAAI;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B9B,OAAA;QAAQ+B,OAAO,EAAEK,iBAAkB;QAAClB,SAAS,EAAC,cAAc;QAAAO,QAAA,EAAC;MAE7D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CAAC,MAER;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAtEID,UAAU;EAAA,QAIQH,gBAAgB;AAAA;AAAAuC,EAAA,GAJlCpC,UAAU;AAwEhB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}