{"ast":null,"code":"var _jsxFileName = \"/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/components/ThemeSelectionModal/ThemeSelectionModal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useThemeSettings } from '../../context/ThemeContext'; // Import the theme settings context\nimport './ThemeSelectionModal.css'; // Ensure your styles are imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeSelectionModal = ({\n  setTheme\n}) => {\n  _s();\n  const themeSettings = useThemeSettings();\n\n  // Ensure themeSettings is available and has the expected structure\n  if (!themeSettings || Object.keys(themeSettings).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading themes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Extract the theme objects\n  const themes = Object.values(themeSettings);\n  const handleThemeSelection = selectedTheme => {\n    if (selectedTheme && selectedTheme.name) {\n      setTheme(selectedTheme.name); // Set the theme by its name\n    } else {\n      console.error('Invalid theme selected:', selectedTheme);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"theme-selection-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Your Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-options\",\n      children: themes.map(theme => /*#__PURE__*/_jsxDEV(\"button\", {\n        // Use `id` or `name` as a fallback key\n        onClick: () => handleThemeSelection(theme),\n        className: \"theme-button\",\n        children: [theme.name, \" \"]\n      }, theme.id || theme.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeSelectionModal, \"5Ml+nhOLNk7UsFGxVOWlC2TAuAw=\", false, function () {\n  return [useThemeSettings];\n});\n_c = ThemeSelectionModal;\nexport default ThemeSelectionModal;\nvar _c;\n$RefreshReg$(_c, \"ThemeSelectionModal\");","map":{"version":3,"names":["React","useThemeSettings","jsxDEV","_jsxDEV","ThemeSelectionModal","setTheme","_s","themeSettings","Object","keys","length","children","fileName","_jsxFileName","lineNumber","columnNumber","themes","values","handleThemeSelection","selectedTheme","name","console","error","className","map","theme","onClick","id","_c","$RefreshReg$"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/components/ThemeSelectionModal/ThemeSelectionModal.js"],"sourcesContent":["import React from 'react';\nimport { useThemeSettings } from '../../context/ThemeContext'; // Import the theme settings context\nimport './ThemeSelectionModal.css'; // Ensure your styles are imported\n\nconst ThemeSelectionModal = ({ setTheme }) => {\n  const themeSettings = useThemeSettings();\n\n  // Ensure themeSettings is available and has the expected structure\n  if (!themeSettings || Object.keys(themeSettings).length === 0) {\n    return <div>Loading themes...</div>;\n  }\n\n  // Extract the theme objects\n  const themes = Object.values(themeSettings);\n\n  const handleThemeSelection = (selectedTheme) => {\n    if (selectedTheme && selectedTheme.name) {\n      setTheme(selectedTheme.name); // Set the theme by its name\n    } else {\n      console.error('Invalid theme selected:', selectedTheme);\n    }\n  };\n\n  return (\n    <div className=\"theme-selection-modal\">\n      <h2>Select Your Theme</h2>\n      <div className=\"theme-options\">\n        {themes.map((theme) => (\n          <button\n            key={theme.id || theme.name} // Use `id` or `name` as a fallback key\n            onClick={() => handleThemeSelection(theme)}\n            className=\"theme-button\"\n          >\n            {theme.name} {/* Display the theme name */}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeSelectionModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,4BAA4B,CAAC,CAAC;AAC/D,OAAO,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,aAAa,GAAGN,gBAAgB,CAAC,CAAC;;EAExC;EACA,IAAI,CAACM,aAAa,IAAIC,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE;IAC7D,oBAAOP,OAAA;MAAAQ,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;;EAEA;EACA,MAAMC,MAAM,GAAGR,MAAM,CAACS,MAAM,CAACV,aAAa,CAAC;EAE3C,MAAMW,oBAAoB,GAAIC,aAAa,IAAK;IAC9C,IAAIA,aAAa,IAAIA,aAAa,CAACC,IAAI,EAAE;MACvCf,QAAQ,CAACc,aAAa,CAACC,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC,MAAM;MACLC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEH,aAAa,CAAC;IACzD;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKoB,SAAS,EAAC,uBAAuB;IAAAZ,QAAA,gBACpCR,OAAA;MAAAQ,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BZ,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAZ,QAAA,EAC3BK,MAAM,CAACQ,GAAG,CAAEC,KAAK,iBAChBtB,OAAA;QAC+B;QAC7BuB,OAAO,EAAEA,CAAA,KAAMR,oBAAoB,CAACO,KAAK,CAAE;QAC3CF,SAAS,EAAC,cAAc;QAAAZ,QAAA,GAEvBc,KAAK,CAACL,IAAI,EAAC,GAAC;MAAA,GAJRK,KAAK,CAACE,EAAE,IAAIF,KAAK,CAACL,IAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKrB,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACT,EAAA,CAnCIF,mBAAmB;EAAA,QACDH,gBAAgB;AAAA;AAAA2B,EAAA,GADlCxB,mBAAmB;AAqCzB,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}