{"ast":null,"code":"var _jsxFileName = \"/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/components/Testimonials/Testimonials.js\";\n// Testimonials.js\nimport React from 'react';\nimport './Testimonials.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testimonials = ({\n  testimonials\n}) => {\n  // Make sure testimonials exist and are of the correct type before rendering\n  if (!testimonials || !Array.isArray(testimonials)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No testimonials available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"testimonials\",\n    children: testimonials.map((testimonial, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testimonial-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"testimonial-text\",\n        children: testimonial.text && testimonial.text.toLowerCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"testimonial-author\",\n        children: [\"-\", ' ', testimonial.author || 'Anonymous']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Testimonials;\nexport default Testimonials;\nvar _c;\n$RefreshReg$(_c, \"Testimonials\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Testimonials","testimonials","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","testimonial","index","text","toLowerCase","author","_c","$RefreshReg$"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/components/Testimonials/Testimonials.js"],"sourcesContent":["// Testimonials.js\nimport React from 'react';\nimport './Testimonials.css';\n\nconst Testimonials = ({ testimonials }) => {\n  // Make sure testimonials exist and are of the correct type before rendering\n  if (!testimonials || !Array.isArray(testimonials)) {\n    return <p>No testimonials available.</p>;\n  }\n\n  return (\n    <div className=\"testimonials\">\n      {testimonials.map((testimonial, index) => (\n        <div key={index} className=\"testimonial-card\">\n          <p className=\"testimonial-text\">\n            {/* Ensure testimonial.text exists before applying string methods */}\n            {testimonial.text && testimonial.text.toLowerCase()}\n          </p>\n          <p className=\"testimonial-author\">\n            {/* Ensure testimonial.author exists before rendering */}-{' '}\n            {testimonial.author || 'Anonymous'}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Testimonials;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EACzC;EACA,IAAI,CAACA,YAAY,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,EAAE;IACjD,oBAAOF,OAAA;MAAAK,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1C;EAEA,oBACET,OAAA;IAAKU,SAAS,EAAC,cAAc;IAAAL,QAAA,EAC1BH,YAAY,CAACS,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBACnCb,OAAA;MAAiBU,SAAS,EAAC,kBAAkB;MAAAL,QAAA,gBAC3CL,OAAA;QAAGU,SAAS,EAAC,kBAAkB;QAAAL,QAAA,EAE5BO,WAAW,CAACE,IAAI,IAAIF,WAAW,CAACE,IAAI,CAACC,WAAW,CAAC;MAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACJT,OAAA;QAAGU,SAAS,EAAC,oBAAoB;QAAAL,QAAA,GAC0B,GAAC,EAAC,GAAG,EAC7DO,WAAW,CAACI,MAAM,IAAI,WAAW;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA,GARII,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACQ,EAAA,GAtBIhB,YAAY;AAwBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}