{"ast":null,"code":"var _jsxFileName = \"/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/context/theme/ThemeContext/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport ThemeSelectionModal from '../../../components/ThemeSelectionModal/ThemeSelectionModal';\nimport { themeSettings } from '../../themes/themeSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('default');\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('selectedTheme');\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n  useEffect(() => {\n    if (theme) {\n      localStorage.setItem('selectedTheme', theme);\n    }\n  }, [theme]);\n  useEffect(() => {\n    console.log('Loaded themeSettings:', themeSettings);\n    console.log('Current theme:', theme, 'Settings:', themeSettings[theme]);\n  }, [theme]);\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n  const hideModal = () => {\n    setIsModalVisible(false);\n  };\n  const handleSetTheme = newTheme => {\n    setTheme(newTheme);\n    hideModal();\n  };\n  const value = {\n    theme,\n    themeSettings: themeSettings[theme] || themeSettings.default,\n    setTheme: handleSetTheme,\n    showModal\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: [children, isModalVisible && /*#__PURE__*/_jsxDEV(ThemeSelectionModal, {\n      setTheme: handleSetTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"z9OzWM2zDxK9nH/I1qd0Fi4/vM0=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","ThemeSelectionModal","themeSettings","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","isModalVisible","setIsModalVisible","savedTheme","localStorage","getItem","setItem","console","log","showModal","hideModal","handleSetTheme","newTheme","value","default","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/context/theme/ThemeContext/ThemeContext.js"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\nimport ThemeSelectionModal from '../../../components/ThemeSelectionModal/ThemeSelectionModal';\nimport { themeSettings } from '../../themes/themeSettings';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState('default');\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('selectedTheme');\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (theme) {\n      localStorage.setItem('selectedTheme', theme);\n    }\n  }, [theme]);\n\n  useEffect(() => {\n    console.log('Loaded themeSettings:', themeSettings);\n    console.log(\n      'Current theme:',\n      theme,\n      'Settings:',\n      themeSettings[theme]\n    );\n  }, [theme]);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const hideModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleSetTheme = (newTheme) => {\n    setTheme(newTheme);\n    hideModal();\n  };\n\n  const value = {\n    theme,\n    themeSettings: themeSettings[theme] || themeSettings.default,\n    setTheme: handleSetTheme,\n    showModal,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n      {isModalVisible && (\n        <ThemeSelectionModal setTheme={handleSetTheme} />\n      )}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,SAAS,QACJ,OAAO;AACd,OAAOC,mBAAmB,MAAM,6DAA6D;AAC7F,SAASC,aAAa,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,YAAY,gBAAGR,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMS,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,SAAS,CAAC;EAC7C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IACxD,IAAIF,UAAU,EAAE;MACdH,QAAQ,CAACG,UAAU,CAAC;IACtB;EACF,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,EAAE;MACTK,YAAY,CAACE,OAAO,CAAC,eAAe,EAAEP,KAAK,CAAC;IAC9C;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEXT,SAAS,CAAC,MAAM;IACdiB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEhB,aAAa,CAAC;IACnDe,OAAO,CAACC,GAAG,CACT,gBAAgB,EAChBT,KAAK,EACL,WAAW,EACXP,aAAa,CAACO,KAAK,CACrB,CAAC;EACH,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACtBP,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMQ,SAAS,GAAGA,CAAA,KAAM;IACtBR,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMS,cAAc,GAAIC,QAAQ,IAAK;IACnCZ,QAAQ,CAACY,QAAQ,CAAC;IAClBF,SAAS,CAAC,CAAC;EACb,CAAC;EAED,MAAMG,KAAK,GAAG;IACZd,KAAK;IACLP,aAAa,EAAEA,aAAa,CAACO,KAAK,CAAC,IAAIP,aAAa,CAACsB,OAAO;IAC5Dd,QAAQ,EAAEW,cAAc;IACxBF;EACF,CAAC;EAED,oBACEf,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAhB,QAAA,GACjCA,QAAQ,EACRI,cAAc,iBACbP,OAAA,CAACH,mBAAmB;MAACS,QAAQ,EAAEW;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACjD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACoB,CAAC;AAE5B,CAAC;AAACrB,EAAA,CAvDWF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAyD1B,OAAO,MAAMyB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlC,UAAU,CAACO,YAAY,CAAC;AAAA;AAAC2B,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}