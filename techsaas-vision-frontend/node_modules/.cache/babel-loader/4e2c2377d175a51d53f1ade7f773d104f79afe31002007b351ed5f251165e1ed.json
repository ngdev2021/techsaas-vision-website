{"ast":null,"code":"var _jsxFileName = \"/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/components/ThemeSelectionModal/ThemeSelectionModal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './ThemeSelectionModal.css';\nimport { useThemeSettings } from '../../context/ThemeSettingsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeSelectionModal = ({\n  setTheme\n}) => {\n  _s();\n  const themeSettings = useThemeSettings();\n  const themes = Object.keys(themeSettings); // Extract theme names dynamically\n\n  const formatThemeName = theme => {\n    // Capitalize the first letter and replace underscores with spaces if needed\n    return theme.charAt(0).toUpperCase() + theme.slice(1).replace(/([A-Z])/g, ' $1').trim();\n  };\n  const handleThemeSelection = selectedTheme => {\n    setTheme(selectedTheme);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"theme-selection-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Your Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-options\",\n      children: themes.map(theme => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleThemeSelection(theme),\n        className: \"theme-button\",\n        children: [formatThemeName(theme), ' ']\n      }, theme, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeSelectionModal, \"5Ml+nhOLNk7UsFGxVOWlC2TAuAw=\", false, function () {\n  return [useThemeSettings];\n});\n_c = ThemeSelectionModal;\nexport default ThemeSelectionModal;\nvar _c;\n$RefreshReg$(_c, \"ThemeSelectionModal\");","map":{"version":3,"names":["React","useThemeSettings","jsxDEV","_jsxDEV","ThemeSelectionModal","setTheme","_s","themeSettings","themes","Object","keys","formatThemeName","theme","charAt","toUpperCase","slice","replace","trim","handleThemeSelection","selectedTheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/components/ThemeSelectionModal/ThemeSelectionModal.js"],"sourcesContent":["import React from 'react';\nimport './ThemeSelectionModal.css';\nimport { useThemeSettings } from '../../context/ThemeSettingsContext';\n\nconst ThemeSelectionModal = ({ setTheme }) => {\n  const themeSettings = useThemeSettings();\n  const themes = Object.keys(themeSettings); // Extract theme names dynamically\n\n  const formatThemeName = (theme) => {\n    // Capitalize the first letter and replace underscores with spaces if needed\n    return (\n      theme.charAt(0).toUpperCase() +\n      theme\n        .slice(1)\n        .replace(/([A-Z])/g, ' $1')\n        .trim()\n    );\n  };\n\n  const handleThemeSelection = (selectedTheme) => {\n    setTheme(selectedTheme);\n  };\n\n  return (\n    <div className=\"theme-selection-modal\">\n      <h2>Select Your Theme</h2>\n      <div className=\"theme-options\">\n        {themes.map((theme) => (\n          <button\n            key={theme}\n            onClick={() => handleThemeSelection(theme)}\n            className=\"theme-button\"\n          >\n            {formatThemeName(theme)}{' '}\n            {/* Format theme name for display */}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeSelectionModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,2BAA2B;AAClC,SAASC,gBAAgB,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,aAAa,GAAGN,gBAAgB,CAAC,CAAC;EACxC,MAAMO,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACH,aAAa,CAAC,CAAC,CAAC;;EAE3C,MAAMI,eAAe,GAAIC,KAAK,IAAK;IACjC;IACA,OACEA,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAC7BF,KAAK,CACFG,KAAK,CAAC,CAAC,CAAC,CACRC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAC1BC,IAAI,CAAC,CAAC;EAEb,CAAC;EAED,MAAMC,oBAAoB,GAAIC,aAAa,IAAK;IAC9Cd,QAAQ,CAACc,aAAa,CAAC;EACzB,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpClB,OAAA;MAAAkB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BtB,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3Bb,MAAM,CAACkB,GAAG,CAAEd,KAAK,iBAChBT,OAAA;QAEEwB,OAAO,EAAEA,CAAA,KAAMT,oBAAoB,CAACN,KAAK,CAAE;QAC3CQ,SAAS,EAAC,cAAc;QAAAC,QAAA,GAEvBV,eAAe,CAACC,KAAK,CAAC,EAAE,GAAG;MAAA,GAJvBA,KAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMJ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CApCIF,mBAAmB;EAAA,QACDH,gBAAgB;AAAA;AAAA2B,EAAA,GADlCxB,mBAAmB;AAsCzB,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}