{"ast":null,"code":"var _jsxFileName = \"/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/components/ThemeSelectionModal/ThemeSelectionModal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './ThemeSelectionModal.css';\nimport { useTheme } from '../../context/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeSelectionModal = ({\n  setTheme\n}) => {\n  _s();\n  const {\n    themeSettings\n  } = useTheme(); // Get themeSettings directly from context\n\n  if (!themeSettings) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading themes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Get the available theme keys\n  const themes = Object.keys(themeSettings);\n  const handleThemeSelection = selectedTheme => {\n    setTheme(selectedTheme);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"theme-selection-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Your Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-options\",\n      children: themes.map(theme => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleThemeSelection(theme),\n        className: \"theme-button\",\n        children: theme.charAt(0).toUpperCase() + theme.slice(1)\n      }, theme, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeSelectionModal, \"6jyRUpa5oHGIl+SQo8NlqjDHzGU=\", false, function () {\n  return [useTheme];\n});\n_c = ThemeSelectionModal;\nexport default ThemeSelectionModal;\nvar _c;\n$RefreshReg$(_c, \"ThemeSelectionModal\");","map":{"version":3,"names":["React","useTheme","jsxDEV","_jsxDEV","ThemeSelectionModal","setTheme","_s","themeSettings","children","fileName","_jsxFileName","lineNumber","columnNumber","themes","Object","keys","handleThemeSelection","selectedTheme","className","map","theme","onClick","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/components/ThemeSelectionModal/ThemeSelectionModal.js"],"sourcesContent":["import React from 'react';\nimport './ThemeSelectionModal.css';\nimport { useTheme } from '../../context/ThemeContext';\n\nconst ThemeSelectionModal = ({ setTheme }) => {\n  const { themeSettings } = useTheme(); // Get themeSettings directly from context\n\n  if (!themeSettings) {\n    return <div>Loading themes...</div>;\n  }\n\n  // Get the available theme keys\n  const themes = Object.keys(themeSettings);\n\n  const handleThemeSelection = (selectedTheme) => {\n    setTheme(selectedTheme);\n  };\n\n  return (\n    <div className=\"theme-selection-modal\">\n      <h2>Select Your Theme</h2>\n      <div className=\"theme-options\">\n        {themes.map((theme) => (\n          <button\n            key={theme}\n            onClick={() => handleThemeSelection(theme)}\n            className=\"theme-button\"\n          >\n            {theme.charAt(0).toUpperCase() + theme.slice(1)}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeSelectionModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,2BAA2B;AAClC,SAASC,QAAQ,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM;IAAEC;EAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtC,IAAI,CAACM,aAAa,EAAE;IAClB,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;;EAEA;EACA,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACR,aAAa,CAAC;EAEzC,MAAMS,oBAAoB,GAAIC,aAAa,IAAK;IAC9CZ,QAAQ,CAACY,aAAa,CAAC;EACzB,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,uBAAuB;IAAAV,QAAA,gBACpCL,OAAA;MAAAK,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BT,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAV,QAAA,EAC3BK,MAAM,CAACM,GAAG,CAAEC,KAAK,iBAChBjB,OAAA;QAEEkB,OAAO,EAAEA,CAAA,KAAML,oBAAoB,CAACI,KAAK,CAAE;QAC3CF,SAAS,EAAC,cAAc;QAAAV,QAAA,EAEvBY,KAAK,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGH,KAAK,CAACI,KAAK,CAAC,CAAC;MAAC,GAJ1CJ,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKJ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACN,EAAA,CA9BIF,mBAAmB;EAAA,QACGH,QAAQ;AAAA;AAAAwB,EAAA,GAD9BrB,mBAAmB;AAgCzB,eAAeA,mBAAmB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}