{"ast":null,"code":"var _jsxFileName = \"/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTheme } from './context/ThemeContext';\nimport Home from './pages/Home/Home';\nimport ThemeSelectionModal from './components/ThemeSelectionModal/ThemeSelectionModal';\nimport Navigation from './components/Navigation/Navigation';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    theme,\n    setTheme\n  } = useTheme(); // Theme management from context\n  const [isModalVisible, setIsModalVisible] = useState(true);\n\n  // Initialize animations on scroll (AOS)\n  useEffect(() => {\n    AOS.init({\n      duration: 1000\n    });\n\n    // Show the modal if no theme is selected\n    setIsModalVisible(!theme);\n  }, [theme]);\n\n  // Handle theme selection and close the modal\n  const handleThemeSelection = selectedTheme => {\n    setTheme(selectedTheme);\n    setIsModalVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      toggleModal: () => setIsModalVisible(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), isModalVisible ? /*#__PURE__*/_jsxDEV(ThemeSelectionModal, {\n      setTheme: handleThemeSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EW+uUFr5w1BWzkXUeqIYJ7cMdtc=\", false, function () {\n  return [useTheme];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useTheme","Home","ThemeSelectionModal","Navigation","AOS","jsxDEV","_jsxDEV","App","_s","theme","setTheme","isModalVisible","setIsModalVisible","init","duration","handleThemeSelection","selectedTheme","className","children","toggleModal","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useTheme } from './context/ThemeContext';\nimport Home from './pages/Home/Home';\nimport ThemeSelectionModal from './components/ThemeSelectionModal/ThemeSelectionModal';\nimport Navigation from './components/Navigation/Navigation';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport './App.css';\n\nfunction App() {\n  const { theme, setTheme } = useTheme(); // Theme management from context\n  const [isModalVisible, setIsModalVisible] = useState(true);\n\n  // Initialize animations on scroll (AOS)\n  useEffect(() => {\n    AOS.init({ duration: 1000 });\n\n    // Show the modal if no theme is selected\n    setIsModalVisible(!theme);\n  }, [theme]);\n\n  // Handle theme selection and close the modal\n  const handleThemeSelection = (selectedTheme) => {\n    setTheme(selectedTheme);\n    setIsModalVisible(false);\n  };\n\n  return (\n    <div className={`app ${theme}`}>\n      <Navigation toggleModal={() => setIsModalVisible(true)} />\n      {/* Render the Theme Selection Modal if no theme is selected */}\n      {isModalVisible ? (\n        <ThemeSelectionModal setTheme={handleThemeSelection} />\n      ) : (\n        <Home />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,mBAAmB,MAAM,sDAAsD;AACtF,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,GAAG,MAAM,KAAK;AACrB,OAAO,kBAAkB;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACAD,SAAS,CAAC,MAAM;IACdM,GAAG,CAACS,IAAI,CAAC;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;;IAE5B;IACAF,iBAAiB,CAAC,CAACH,KAAK,CAAC;EAC3B,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMM,oBAAoB,GAAIC,aAAa,IAAK;IAC9CN,QAAQ,CAACM,aAAa,CAAC;IACvBJ,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAE,OAAOR,KAAK,EAAG;IAAAS,QAAA,gBAC7BZ,OAAA,CAACH,UAAU;MAACgB,WAAW,EAAEA,CAAA,KAAMP,iBAAiB,CAAC,IAAI;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEzDZ,cAAc,gBACbL,OAAA,CAACJ,mBAAmB;MAACQ,QAAQ,EAAEK;IAAqB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEvDjB,OAAA,CAACL,IAAI;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CA7BQD,GAAG;EAAA,QACkBP,QAAQ;AAAA;AAAAwB,EAAA,GAD7BjB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}