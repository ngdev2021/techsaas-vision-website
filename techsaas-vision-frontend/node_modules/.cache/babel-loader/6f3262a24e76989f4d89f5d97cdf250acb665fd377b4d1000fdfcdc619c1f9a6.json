{"ast":null,"code":"var _jsxFileName = \"/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { themeSettings } from './themes/themeSettings';\nimport ThemeSelectionModal from '../components/ThemeSelectionModal/ThemeSelectionModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('default');\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('selectedTheme');\n    const savedDarkMode = localStorage.getItem('darkMode') === 'true';\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n    setIsDarkMode(savedDarkMode);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('selectedTheme', theme);\n    localStorage.setItem('darkMode', isDarkMode);\n  }, [theme, isDarkMode]);\n  const toggleDarkMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n  const hideModal = () => {\n    setIsModalVisible(false);\n  };\n  const handleSetTheme = newTheme => {\n    setTheme(newTheme);\n    hideModal();\n  };\n  const value = {\n    theme,\n    isDarkMode,\n    themeSettings: themeSettings[theme] || themeSettings.default,\n    setTheme: handleSetTheme,\n    toggleDarkMode,\n    showModal\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: isDarkMode ? 'dark-mode' : 'light-mode',\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isModalVisible && /*#__PURE__*/_jsxDEV(ThemeSelectionModal, {\n      setTheme: handleSetTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"bEq13AF8GJl+O3pX/c16zqk2oDA=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","themeSettings","ThemeSelectionModal","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","isDarkMode","setIsDarkMode","isModalVisible","setIsModalVisible","savedTheme","localStorage","getItem","savedDarkMode","setItem","toggleDarkMode","prevMode","showModal","hideModal","handleSetTheme","newTheme","value","default","Provider","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\nimport { themeSettings } from './themes/themeSettings';\nimport ThemeSelectionModal from '../components/ThemeSelectionModal/ThemeSelectionModal';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState('default');\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('selectedTheme');\n    const savedDarkMode = localStorage.getItem('darkMode') === 'true';\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n    setIsDarkMode(savedDarkMode);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('selectedTheme', theme);\n    localStorage.setItem('darkMode', isDarkMode);\n  }, [theme, isDarkMode]);\n\n  const toggleDarkMode = () => {\n    setIsDarkMode((prevMode) => !prevMode);\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const hideModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleSetTheme = (newTheme) => {\n    setTheme(newTheme);\n    hideModal();\n  };\n\n  const value = {\n    theme,\n    isDarkMode,\n    themeSettings: themeSettings[theme] || themeSettings.default,\n    setTheme: handleSetTheme,\n    toggleDarkMode,\n    showModal,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <div className={isDarkMode ? 'dark-mode' : 'light-mode'}>\n        {children}\n      </div>\n      {isModalVisible && (\n        <ThemeSelectionModal setTheme={handleSetTheme} />\n      )}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,SAAS,QACJ,OAAO;AACd,SAASC,aAAa,QAAQ,wBAAwB;AACtD,OAAOC,mBAAmB,MAAM,uDAAuD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExF,MAAMC,YAAY,gBAAGR,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMS,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,SAAS,CAAC;EAC7C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IACxD,MAAMC,aAAa,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;IACjE,IAAIF,UAAU,EAAE;MACdL,QAAQ,CAACK,UAAU,CAAC;IACtB;IACAH,aAAa,CAACM,aAAa,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAENlB,SAAS,CAAC,MAAM;IACdgB,YAAY,CAACG,OAAO,CAAC,eAAe,EAAEV,KAAK,CAAC;IAC5CO,YAAY,CAACG,OAAO,CAAC,UAAU,EAAER,UAAU,CAAC;EAC9C,CAAC,EAAE,CAACF,KAAK,EAAEE,UAAU,CAAC,CAAC;EAEvB,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BR,aAAa,CAAES,QAAQ,IAAK,CAACA,QAAQ,CAAC;EACxC,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBR,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtBT,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMU,cAAc,GAAIC,QAAQ,IAAK;IACnCf,QAAQ,CAACe,QAAQ,CAAC;IAClBF,SAAS,CAAC,CAAC;EACb,CAAC;EAED,MAAMG,KAAK,GAAG;IACZjB,KAAK;IACLE,UAAU;IACVV,aAAa,EAAEA,aAAa,CAACQ,KAAK,CAAC,IAAIR,aAAa,CAAC0B,OAAO;IAC5DjB,QAAQ,EAAEc,cAAc;IACxBJ,cAAc;IACdE;EACF,CAAC;EAED,oBACElB,OAAA,CAACC,YAAY,CAACuB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAnB,QAAA,gBAClCH,OAAA;MAAKyB,SAAS,EAAElB,UAAU,GAAG,WAAW,GAAG,YAAa;MAAAJ,QAAA,EACrDA;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLpB,cAAc,iBACbT,OAAA,CAACF,mBAAmB;MAACQ,QAAQ,EAAEc;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACjD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACoB,CAAC;AAE5B,CAAC;AAACzB,EAAA,CAvDWF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAyD1B,OAAO,MAAM6B,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtC,UAAU,CAACO,YAAY,CAAC;AAAA;AAAC+B,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}