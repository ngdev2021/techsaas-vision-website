{"ast":null,"code":"var _jsxFileName = \"/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setTheme] = useState('default');\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('selectedTheme');\n    console.log('Retrieved theme from localStorage:', savedTheme);\n    if (savedTheme) {\n      setTheme(savedTheme);\n    } else {\n      // Set default theme if none is found in localStorage\n      localStorage.setItem('selectedTheme', 'default');\n    }\n  }, []);\n  const handleSetTheme = newTheme => {\n    console.log('Setting theme in localStorage:', newTheme);\n    localStorage.setItem('selectedTheme', newTheme);\n    setTheme(newTheme);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme: handleSetTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"harZOOCftm4CiS0E9M3gY4Hh3mM=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","theme","setTheme","savedTheme","localStorage","getItem","console","log","setItem","handleSetTheme","newTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/webdev/Desktop/techsaas-vision/techsaas-vision-frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState('default');\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('selectedTheme');\n    console.log('Retrieved theme from localStorage:', savedTheme);\n    if (savedTheme) {\n      setTheme(savedTheme);\n    } else {\n      // Set default theme if none is found in localStorage\n      localStorage.setItem('selectedTheme', 'default');\n    }\n  }, []);\n\n  const handleSetTheme = (newTheme) => {\n    console.log('Setting theme in localStorage:', newTheme);\n    localStorage.setItem('selectedTheme', newTheme);\n    setTheme(newTheme);\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{ theme, setTheme: handleSetTheme }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,SAAS,QACJ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEf,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,SAAS,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IACxDC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEJ,UAAU,CAAC;IAC7D,IAAIA,UAAU,EAAE;MACdD,QAAQ,CAACC,UAAU,CAAC;IACtB,CAAC,MAAM;MACL;MACAC,YAAY,CAACI,OAAO,CAAC,eAAe,EAAE,SAAS,CAAC;IAClD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAIC,QAAQ,IAAK;IACnCJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEG,QAAQ,CAAC;IACvDN,YAAY,CAACI,OAAO,CAAC,eAAe,EAAEE,QAAQ,CAAC;IAC/CR,QAAQ,CAACQ,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEhB,OAAA,CAACC,YAAY,CAACgB,QAAQ;IACpBC,KAAK,EAAE;MAAEX,KAAK;MAAEC,QAAQ,EAAEO;IAAe,CAAE;IAAAV,QAAA,EAE1CA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAChB,GAAA,CA3BWF,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}